name: CI
on:
    push:
        branches:
        - main
    pull_request:
    schedule:
        - cron:  '23 3 * * *'

jobs:
    flake8:
        name: Flake8
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -
            uses: actions/setup-python@v1
            with:
                # matches compat target in setup.py
                python-version: '3.8'
        -   name: "Flake8 test"
            run: |
                python -m pip install flake8 flake8-quotes
                python -m flake8 isolator.py

    emirge:
        name: Emirge installation
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [ubuntu-latest, macos-latest]

        steps:
        - uses: actions/checkout@v2
        - name: Install emirge
          run: |
            [[ $(uname) == Linux ]] && sudo apt-get update && sudo apt-get install -y openmpi-bin libopenmpi-dev
            [[ $(uname) == Darwin ]] && brew update && brew install mpich
            ./buildMirge.sh
            cd emirge
            source config/activate_env.sh
            ./version.sh

        - name: Run pylint
          run: |
            source emirge/config/activate_env.sh
            python -m pip install wheel
            python -m pip install pylint pyyaml

            pylint isolator.py
            pylint isolator_injection_init.py
            pylint isolator_injection_run.py

        - name: Eager smoke test
          run: |
            source emirge/config/activate_env.sh
            cd smoke_test
            ./run.sh | tee mirge-1.out
            ./getTiming.sh

        - name: Eager smoke restart test
          run: |
            source emirge/config/activate_env.sh
            cd smoke_test
            ./run_restart.sh

        - name: Lazy smoke test
          run: |
            source emirge/config/activate_env.sh
            cd smoke_test
            ./run_lazy.sh | tee mirge-1.out
            ./getTiming.sh

        - name: Lazy parallel distributed smoke test
          run: |
            source emirge/config/activate_env.sh
            cd smoke_test
            ./run_lazy.sh | tee mirge-1.out
            ./getTiming.sh

        - name: Eager multi-species injection smoke test
          run: |
            source emirge/config/activate_env.sh
            cd smoke_test_injection_2d
            ln -sf run_params_scalar.yaml run_params.yaml
            ./run_init.sh
            ./run.sh | tee mirge-1.out
            ./getTiming.sh
            ln -sf run_params_multi.yaml run_params.yaml
            ./run_init.sh
            ./run.sh | tee mirge-1.out
            ./getTiming.sh

        - name: Lazy multi-species injection smoke test
          run: |
            source emirge/config/activate_env.sh
            cd smoke_test_injection_2d
            ln -sf run_params_scalar.yaml run_params.yaml
            ./run_init_lazy.sh
            ./run_lazy.sh | tee mirge-1.out
            ./getTiming.sh
            ln -sf run_params_multi.yaml run_params.yaml
            ./run_init_lazy.sh
            ./run_lazy.sh | tee mirge-1.out
            ./getTiming.sh

        - name: Lazy parallel multi-species injection smoke test
          run: |
            set -o pipefail
            source emirge/config/activate_env.sh
            cd smoke_test_injection_2d
            ln -sf run_params_scalar.yaml run_params.yaml
            ./run_init_lazy_parallel.sh
            ./run_lazy_parallel.sh | tee mirge-1.out
            ./getTiming.sh
            ln -sf run_params_multi.yaml run_params.yaml
            ./run_init_lazy_parallel.sh
            ./run_lazy_parallel.sh | tee mirge-1.out
            ./getTiming.sh

        - name: 3D injection smoke test
          run: |
            source emirge/config/activate_env.sh
            cd smoke_test_injection_3d
            ln -sf run_params_scalar.yaml run_params.yaml
            ./run_init_lazy.sh
            ./run_lazy.sh
            ./getTiming.sh
            ln -sf run_params_multi.yaml run_params.yaml
            ./run_init_lazy.sh
            ./run_lazy.sh
            ./getTiming.sh


